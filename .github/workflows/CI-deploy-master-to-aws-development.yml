name: 'CI-deploy-master-to-aws-development'

on:
  repository_dispatch:
    types: do-deploy-master-to-aws-development
# push:
#   branches:
#     - master
#     - 'story-*'  # Push events to branches matching story-1001
#     - 'releases/**'  # Push events to branches matching refs/heads/releases/10
#   tags:
#     - v1
#     - v*   # Push events to branches matching v1, v1.1, v10
#     - v**   # Push events to branches matching version/1, v/2
#     - v1.* # Push events to tags v1.0, v1.1, and v1.9
# schedule:
#   - cron:  '0 17 * * *' # runs on every day at 5pm UTC

jobs:
  deploy-master-to-aws-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # default 360
    steps:
    - uses: actions/checkout@v1
      with:
        ref: 'master'
    - name: Install Java 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        java-package: jdk
        architecture: x64
    - name: Cache maven dependencies
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-cache-master-v1
        restore-keys: |
          ${{ runner.os }}-maven-cache-master-v1
    - name: 'Install dependencies'
      run: |
        ./ci-install-dependencies.sh
    - name: 'CI Build Command'
      timeout-minutes: 20
      run: |
        ./ci-build.sh
    - name: Archive cucumber reports 1
      uses: actions/upload-artifact@v1
      if: ${{ always() }}
      with:
        name: cucumber-test-result-1
        path: RestExample/RestServiceAndConsumerBddTest/target/cucumber-html-report
    - name: Archive cucumber reports 2
      uses: actions/upload-artifact@v1
      if: ${{ always() }}
      with:
        name: cucumber-test-result-2
        path: RestExample/RestServiceAndConsumerBddTestWithMocks/target/cucumber-html-report
    - name: 'CI Build Docker Command'
      timeout-minutes: 20
      run: |
        ./ci-build-docker.sh
    - name: 'CI Print current version of deployment'
      timeout-minutes: 5
      env:
        URL: 'https://docker-http-app-development.harishkannarao.com/health-check'
      run: |
        ./ci-print-current-version.sh
    - name: 'CI Push Docker Command'
      timeout-minutes: 20
      env:
        ENVIRONMENT: 'development'
        APPLICATION_NAME: 'docker-http-app'
        DOCKER_AWS_ACCOUNT_ID: ${{ secrets.AwsAccountId }}
        DOCKER_AWS_REGION: 'eu-west-2'
        AWS_ACCESS_KEY_ID: ${{ secrets.AwsAccessKeyId }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AwsSecretAccessKey }}
        AWS_DEFAULT_REGION: 'eu-west-2'
        AWS_DEFAULT_OUTPUT: 'json'
      run: |
        ./ci-push-docker.sh
    - name: 'CI Verify Deployment'
      timeout-minutes: 20
      env:
        URL: 'https://docker-http-app-development.harishkannarao.com/health-check'
      run: |
        ./ci-verify-deployment.sh
    - name: 'CI Trigger Downstream Pipeline'
      timeout-minutes: 10
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GithubAccessToken }}
      run: |
        ./ci-trigger-downstream-pipelines.sh